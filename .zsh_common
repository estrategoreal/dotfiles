# .zsh_common

#setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Keep 100000 lines of history within the shell and save it to ~/.zsh_history: 
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_reduce_blanks
setopt share_history

# Use modern completion system
autoload -Uz compinit
compinit

setopt autopushd
setopt correct
setopt list_packed
setopt no_beep

zstyle ':completion:*' menu select=2
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'

precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# User specific aliases and functions

[ -f ~/.zsh.d/git-completion.sh ] && source ~/.zsh.d/git-completion.sh

alias ls='ls --color=auto'
alias ll='ls -l'
alias la='ls -AlF'
alias l='ls -CF'
alias l.='ls -d .[a-zA-Z]*'

alias cp='cp -i'
alias rm='rm -i'
alias mv='mv -i'

alias ack='ack --asm --cc --cpp'

if [ -f ~/.zsh.d/auto-fu.zsh ]; then
    source ~/.zsh.d/auto-fu.zsh
    function zle-line-init () {
        auto-fu-init
    }
    zle -N zle-line-init
    zstyle ':completion:*' completer _oldlist _complete
    zstyle ':auto-fu:var' postdisplay $''
fi

function udtags {
	currpath=$(pwd)
    if [ $# -eq 1 ]; then
        cd $1 || exit 1
    fi
    if [ -e tags ]; then
        rm -f tags
    fi
    ctags -R --extra=q
    if [ -e GPATH ]; then
        rm -f GPATH
    fi
    if [ -e GRTAGS ]; then
        rm -f GRTAGS
    fi
    if [ -e GSYMS ]; then
        rm -f GSYMS
    fi
    if [ -e GTAGS ]; then
        rm -f GTAGS
    fi
	echo
	echo "updating tags..."
    gtags -v 2>/dev/null
    cd $currpath
}
 
# Source global definitions

export PROMPT="%F{magenta}%~
%F{cyan}%n@%m%f%% "
export RPROMPT="%1(v|%F{green}%1v%f|)"

